@import "../scss/variables.scss";

.pokemon-card {
    all: unset;
    cursor: pointer;
    
    & > div {
        display: grid;
        grid-template-columns: 1.5fr 1fr;
        border-radius: $borderRadiusCard;
    }

    .media-container {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: $borderRadiusCard;
        padding: $paddingSmall;
    }

    .pokemon-card-image {
        max-height: 60px;
        max-width: 75px;
    }

    .data-container {
        padding: $paddingMedium $paddingMediumLarge;
    }

    .types-container {
        display: flex;
        gap: $paddingSmall;
    }

    .type-image {
        width: 70px;
    }
}

@mixin generate-color-classes($colors) {
    // color-type
    @each $type, $color in $colors {
        $base-type: if(str-index($type, '-light'), str-slice($type, 1, str-index($type, '-light') - 1), $type);

        .color-#{$type} {
            background-color: $color;
            @if not str-index($type, '-light') {
                background-image: url('../assets/types/#{$base-type}.svg');
                background-repeat: no-repeat;
                background-position: center;
                background-size: 70px;
            }
        }
    }

    // color-type-light
    @each $type, $color in $colors {
        @if str-index($type, '-light') {
            .color-#{$type} {
                background-color: $color;
            }
        }
    }
}

@include generate-color-classes($colors);
